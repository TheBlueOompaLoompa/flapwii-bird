make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.
 
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Wed Apr 21 08:27:29 2021

# Variables

# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 19)
PORTLIBS_PATH := /opt/devkitpro/portlibs
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 26)
AS := powerpc-eabi-as
# makefile (from 'Makefile', line 96)
OUTPUT := /home/ben/Documents/BuilderProjects/Flapwii/Flapwii
# environment
NO_AT_BRIDGE = 1
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 29)
AR := powerpc-eabi-gcc-ar
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'Makefile', line 79)
OFILES := bird.png.o font.ttf.o pipe.png.o flapwii.o pipe.o   
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-fe50da85-e6ad-4953-87c2-b1eefde50998.sock
# makefile (from 'Makefile', line 54)
VPATH := /home/ben/Documents/BuilderProjects/Flapwii/source /home/ben/Documents/BuilderProjects/Flapwii/source/gfx /home/ben/Documents/BuilderProjects/Flapwii/data
# makefile (from 'Makefile', line 62)
CFILES := $(subst ,, )
# makefile (from 'Makefile', line 37)
LIBS := -lgrrlib -lfreetype -lbz2 -lpngu -lpng -ljpeg -lz -lfat -lwiiuse -lbte -lasnd -logc -lm -lvorbisidec -logg 
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 48)
SILENTMSG := @echo
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 77)
OFILES_BIN := bird.png.o font.ttf.o pipe.png.o
# environment
GOPATH = /home/ben/go
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 63)
CPPFILES := flapwii.cpp pipe.cpp 
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/ben/Documents/BuilderProjects/Flapwii
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
MAIL = /var/spool/mail/ben
# environment
XDG_DATA_DIRS = /var/lib/flatpak/exports/share:/home/ben/.local/share/flatpak/exports/share:/home/ben/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
# makefile (from '/opt/devkitpro/devkitPPC/wii_rules', line 14)
MACHDEP = -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float
# makefile (from 'Makefile', line 64)
sFILES := $(subst ,, )
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session0
# makefile (from '/opt/devkitpro/devkitPPC/wii_rules', line 12)
LIBOGC_LIB := /opt/devkitpro/libogc/lib/wii
# environment
LANG = en_US.UTF-8
# environment
XAUTHORITY = /home/ben/.Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile (from 'Makefile', line 65)
SFILES := $(subst ,, )
# environment
DEVKITARM = /opt/devkitpro/devkitARM
# makefile
CURDIR := /home/ben/Documents/BuilderProjects/Flapwii
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 57)
DEPSDIR := /home/ben/Documents/BuilderProjects/Flapwii/build
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# default
.SHELLFLAGS := -c
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
XDG_SESSION_DESKTOP = gnome-xorg
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"Code - OSS","submitURL":"","uploadToServer":false}
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 1)
MAKEFILE_LIST := Makefile /opt/devkitpro/devkitPPC/wii_rules /opt/devkitpro/devkitPPC/base_rules /opt/devkitpro/devkitPPC/base_tools
# automatic
@F = $(notdir $@)
# environment
LC_COLLATE = C
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 3293
# environment
XDG_SESSION_TYPE = x11
# environment
CUDA_PATH = /opt/cuda
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 33)
RANLIB := powerpc-eabi-gcc-ranlib
# environment
DEVKITPPC = /opt/devkitpro/devkitPPC
# makefile (from 'Makefile', line 81)
HFILES := bird_png.h font_ttf.h pipe_png.h
# makefile (from 'Makefile', line 22)
INCLUDES := 
# environment
SESSION_MANAGER = local/Artix:@/tmp/.ICE-unix/1169,unix/Artix:/tmp/.ICE-unix/1169
# automatic
*F = $(notdir $*)
# environment
QT_QPA_PLATFORMTHEME = qt5ct
# environment
CHROME_DESKTOP = code-oss.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:abstract=/tmp/dbus-jEQ2glsv9n,guid=08a1354447df29ba130e21646080277b
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from 'Makefile', line 86)
INCLUDE :=  -I/home/ben/Documents/BuilderProjects/Flapwii//include -I/opt/devkitpro/portlibs/wii/include -I/opt/devkitpro/portlibs/ppc/include -I/home/ben/Documents/BuilderProjects/Flapwii/build -I/opt/devkitpro/libogc/include
# environment
BREAKPAD_DUMP_LOCATION = /home/ben/.config/Code - OSS/exthost Crash Reports
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# makefile (from 'Makefile', line 78)
OFILES_SOURCES := flapwii.o pipe.o   
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# environment
NODE_RED_HOME = /home/ben/.vscode-oss/extensions/formulahendry.vscode-node-red-0.0.2/node_modules/node-red
# makefile (from 'Makefile', line 66)
BINFILES := bird.png font.ttf pipe.png
# environment
MAKELEVEL := 0
# makefile (from 'Makefile', line 94)
LIBPATHS := -L/opt/devkitpro/libogc/lib/wii -L/home/ben/Documents/BuilderProjects/Flapwii//lib -L/opt/devkitpro/portlibs/wii/lib -L/opt/devkitpro/portlibs/ppc/lib
# default
MAKE = $(MAKE_COMMAND)
# makefile (from '/opt/devkitpro/devkitPPC/wii_rules', line 9)
PATH := /opt/devkitpro/portlibs/wii/bin:/opt/devkitpro/portlibs/ppc/bin:/opt/devkitpro/tools/bin:/opt/devkitpro/devkitPPC/bin:/home/ben/.local/bin:/home/ben/.cargo/bin:/opt/devkitpro/tools/bin:/opt/devkitpro/tools/bin:ATH:/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/cuda/bin:/opt/cuda/nsight_compute:/opt/cuda/nsight_systems/bin:/home/ben/.local/share/flatpak/exports/bin:/var/lib/flatpak/exports/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
# default
MAKEFILES := 
# environment
MOTD_SHOWN = pam
# automatic
^F = $(notdir $^)
# makefile (from '/opt/devkitpro/devkitPPC/wii_rules', line 11)
LIBOGC_INC := /opt/devkitpro/libogc/include
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 24)
PREFIX := powerpc-eabi-
# makefile (from 'Makefile', line 43)
LIBDIRS := /home/ben/Documents/BuilderProjects/Flapwii/ /opt/devkitpro/portlibs/wii /opt/devkitpro/portlibs/ppc
# environment
VSCODE_LOG_NATIVE = false
# automatic
?F = $(notdir $?)
# makefile (from '/opt/devkitpro/devkitPPC/base_rules', line 38)
bin2o = 	bin2s -a 32 -H `(echo $(<F) | tr . _)`.h $< | $(AS) -o $(<F).o
# environment
DEVKITPRO = /opt/devkitpro
# environment
XDG_CURRENT_DESKTOP = GNOME
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 4)
UNAME_S := Linux
# automatic
+F = $(notdir $+)
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
DESKTOP_SESSION = gnome-xorg
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = GNOME
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = ben
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code-oss.desktop
# makefile
.DEFAULT_GOAL := build
# environment
EDITOR = /usr/bin/nano
# environment
DISPLAY = :0
# environment
USER = ben
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 49)
SILENTCMD := @
# makefile (from 'Makefile', line 19)
BUILD := build
# makefile (from 'Makefile', line 32)
LDFLAGS = -g $(MACHDEP) -Wl,-Map,$(notdir $@).map -Wl,--section-start,.init=0x81000000
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 35)
ISVC = $(or $(VCBUILDHELPER_COMMAND),$(MSBUILDEXTENSIONSPATH32),$(MSBUILDEXTENSIONSPATH))
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 3280
# environment
VSCODE_NODE_CACHED_DATA_DIR = /home/ben/.config/Code - OSS/CachedData/2b9aebd5354a3629c3aba0a5f5df49f43d6689f8
# environment
_ = /usr/bin/make
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'Makefile', line 28)
CFLAGS = -g -O2 -Wall $(MACHDEP) $(INCLUDE)
# environment
GOMODCACHE = /home/ben/go/pkg/mod
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /home/ben
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 13)
DEVKITPATH = $(shell echo "$(DEVKITPRO)" | sed -e 's/^\([a-zA-Z]\):/\/\1/')
# makefile (from '/opt/devkitpro/devkitPPC/wii_rules', line 7)
PORTLIBS := /opt/devkitpro/portlibs/wii /opt/devkitpro/portlibs/ppc
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-9197d56a-1.54.3-main.sock
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 32)
NM := powerpc-eabi-gcc-nm
# environment
GOPROXY = https://proxy.golang.org,direct
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 18)
TARGET := Flapwii
# makefile (from 'Makefile', line 74)
LD := powerpc-eabi-g++
# environment
VSCODE_CLI = 1
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'Makefile', line 29)
CXXFLAGS = $(CFLAGS)
 
# environment
XDG_GREETER_DATA_DIR = /var/lib/lightdm-data/ben
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 31)
STRIP := powerpc-eabi-strip
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink guile load
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 28)
CXX := powerpc-eabi-g++
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 27)
CC := powerpc-eabi-gcc
# makefile (from '/opt/devkitpro/devkitPPC/base_tools', line 30)
OBJCOPY := powerpc-eabi-objcopy
# makefile (from 'Makefile', line 20)
SOURCES := source source/gfx
# makefile (from 'Makefile', line 21)
DATA := data
# environment
XDG_MENU_PREFIX = gnome-
# environment
GDMSESSION = gnome-xorg
# variable set hash-table stats:
# Load=143/1024=14%, Rehash=0, Collisions=10/268=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# /home/ben/Documents/BuilderProjects/Flapwii/source (device 2049, inode 28574349): 5 files, no impossibilities.
# . (device 2049, inode 28574348): 13 files, no impossibilities.
# source (device 2049, inode 28574349): 5 files, no impossibilities.
# data (device 2049, inode 29229889): 5 files, no impossibilities.
# /home/ben/Documents/BuilderProjects/Flapwii/source/gfx: could not be stat'd.
# /home/ben/Documents/BuilderProjects/Flapwii/data (device 2049, inode 29229889): 5 files, no impossibilities.
# source/gfx: could not be stat'd.

# 33 files, no impossibilities in 7 directories.

# Implicit Rules

%.a:
#  recipe to execute (from '/opt/devkitpro/devkitPPC/base_rules', line 6):
	$(SILENTMSG) $(notdir $@)
	$(SILENTCMD)rm -f $@
	$(SILENTCMD)$(AR) -rc $@ $^

%.o: %.cpp
#  recipe to execute (from '/opt/devkitpro/devkitPPC/base_rules', line 12):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.d $(CXXFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.c
#  recipe to execute (from '/opt/devkitpro/devkitPPC/base_rules', line 17):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d $(CFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.m
#  recipe to execute (from '/opt/devkitpro/devkitPPC/base_rules', line 22):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d $(OBJCFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.s
#  recipe to execute (from '/opt/devkitpro/devkitPPC/base_rules', line 27):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d -x assembler-with-cpp $(ASFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.o: %.S
#  recipe to execute (from '/opt/devkitpro/devkitPPC/base_rules', line 32):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d -x assembler-with-cpp $(ASFLAGS) -c $< -o $@ $(ERROR_FILTER)

%.dol: %.elf
#  recipe to execute (from '/opt/devkitpro/devkitPPC/wii_rules', line 19):
	$(SILENTMSG) output ... $(notdir $@)
	$(SILENTCMD)elf2dol $< $@

%.tpl: %.scf
#  recipe to execute (from '/opt/devkitpro/devkitPPC/wii_rules', line 24):
	$(SILENTMSG) $(notdir $<)
	$(SILENTCMD)gxtexconv -s $< -d $(DEPSDIR)/$*.d -o $@

%.elf:
#  recipe to execute (from '/opt/devkitpro/devkitPPC/wii_rules', line 29):
	$(SILENTMSG) linking ... $(notdir $@)
	$(SILENTCMD)$(LD)  $^ $(LDFLAGS) $(LIBPATHS) $(LIBS) -o $@

# 9 implicit rules, 0 (0.0%) terminal.
# Files

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-04-20 20:18:29.871943418
#  File has been updated.
#  Successfully updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 106):
	@echo clean ...
	@rm -fr $(BUILD) $(OUTPUT).elf $(OUTPUT).dol

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

run:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 111):
	wiiload $(TARGET).dol

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 101):
	@[ -d $@ ] || mkdir -p $@
	@$(MAKE) --no-print-directory -C $(BUILD) -f $(CURDIR)/Makefile

# Not a target:
/opt/devkitpro/devkitPPC/wii_rules:
#  Implicit rule search has been done.
#  Last modified 2020-06-12 19:53:57
#  File has been updated.
#  Successfully updated.

# Not a target:
/opt/devkitpro/devkitPPC/base_rules:
#  Implicit rule search has been done.
#  Last modified 2020-06-12 19:53:57
#  File has been updated.
#  Successfully updated.

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: build clean
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.

# Not a target:
/opt/devkitpro/devkitPPC/base_tools:
#  Implicit rule search has been done.
#  Last modified 2020-06-12 19:53:57
#  File has been updated.
#  Successfully updated.

# files hash-table stats:
# Load=11/1024=1%, Rehash=0, Collisions=1/33=3%
# VPATH Search Paths

# No 'vpath' search paths.

# General ('VPATH' variable) search path:
# /home/ben/Documents/BuilderProjects/Flapwii/source:/home/ben/Documents/BuilderProjects/Flapwii/source/gfx:/home/ben/Documents/BuilderProjects/Flapwii/data

# strcache buffers: 1 (0) / strings = 46 / storage = 560 B / avg = 12 B
# current buf: size = 8162 B / used = 560 B / count = 46 / avg = 12 B

# strcache performance: lookups = 76 / hit rate = 39%
# hash-table stats:
# Load=46/8192=1%, Rehash=0, Collisions=3/76=4%
# Finished Make data base on Wed Apr 21 08:27:29 2021

 
